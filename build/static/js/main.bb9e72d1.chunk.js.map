{"version":3,"sources":["services/data.js","components/Filter.js","components/DataForm.js","components/Datas.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","data","axios","get","then","response","newObject","post","id","delete","concat","put","Filter","_ref","onChangeHandler","react_default","a","createElement","onChange","DataForm","onSubmitHandler","newID","onChangeIDHandler","newAuthor","onChangeAuthorHandler","newTitle","onChangeTitleHandler","newJournal","onChangeJournalHandler","newYear","onChangeYearHandler","newEprint","onChangeEprintHandler","newEprinttype","onChangeEprinttypeHandler","newEprintclass","onChangeEprintclassHandler","newPages","onChangePagesHandler","newMonth","onChangeMonthHandler","newAnnote","onChangeAnnoteHandler","onSubmit","value","type","Datas","datas","onDelete","Fragment","map","dbs","key","author","title","journal","year","eprint","eprinttype","eprintclass","pages","month","annote","onClick","window","confirm","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setDatas","_useState3","_useState4","newData","_useState5","_useState6","setNewAuthor","_useState7","_useState8","setNewTitle","_useState9","_useState10","setNewJournal","_useState11","_useState12","setNewYear","_useState13","_useState14","setNewEprint","_useState15","_useState16","setNewEprinttype","_useState17","_useState18","newEprintClass","setNewEprintClass","_useState19","_useState20","setNewPages","_useState21","_useState22","setNewMonth","_useState23","_useState24","setNewAnnote","_useState25","_useState26","searchTitle","setSearchTitle","_useState27","_useState28","showAll","setShowAll","_useState29","_useState30","notificationMessage","setNotificationMessage","_useState31","_useState32","errorMessage","setErrorMessage","useEffect","dataService","initialDatas","contactsToShow","filter","toFilter","toLocaleLowerCase","toSearch","toLowerCase","includes","components_Notification","components_Filter","event","target","components_DataForm","preventDefault","toUpdate","d","name","length","objectSpread","updatedData","updatedState","p","toConsumableArray","setTimeout","catch","error","returnedNote","undefined","find","el","alert","components_Datas","updatedDatas","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bb9e72d1.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/data';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n}\n","import React from 'react';\n\nconst Filter = ({ onChangeHandler}) => (\n  <p>\n    Filter show with\n    <input onChange={onChangeHandler} />\n  </p>\n);\n\nexport default Filter;","import React from 'react';\n\nconst DataForm = ({\n  onSubmitHandler,\n  newID,\n  onChangeIDHandler,\n  newAuthor,\n  onChangeAuthorHandler,\n  newTitle,\n  onChangeTitleHandler,\n  newJournal,\n  onChangeJournalHandler,\n  newYear,\n  onChangeYearHandler,\n  newEprint,\n  onChangeEprintHandler,\n  newEprinttype,\n  onChangeEprinttypeHandler,\n  newEprintclass,\n  onChangeEprintclassHandler,\n  newPages,\n  onChangePagesHandler,\n  newMonth,\n  onChangeMonthHandler,\n  newAnnote,\n  onChangeAnnoteHandler,\n}) => {\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div>\n        ID:\n        <input \n          value={newID}\n          onChange={onChangeIDHandler}\n        />\n      </div>\n      <div>\n        Author:\n        <input\n          value={newAuthor}\n          onChange={onChangeAuthorHandler}\n        />\n      </div>\n      <div>\n        Title:\n        <input\n          value={newTitle}\n          onChange={onChangeTitleHandler}\n        />\n      </div>\n      <div>\n        Journal:\n        <input\n          value={newJournal}\n          onChange={onChangeJournalHandler}\n        />\n      </div>\n      <div>\n        Year:\n        <input\n          value={newYear}\n          onChange={onChangeYearHandler}\n        />\n      </div>\n      <div>\n        Eprint:\n        <input\n          value={newEprint}\n          onChange={onChangeEprintHandler}\n        />\n      </div>\n      <div>\n        Eprinttype:\n        <input\n          value={newEprinttype}\n          onChange={onChangeEprinttypeHandler}\n        />\n      </div>\n      <div>\n        Eprintclass:\n        <input\n          value={newEprintclass}\n          onChange={onChangeEprintclassHandler}\n        />\n      </div>\n      <div>\n        Page:\n        <input\n          value={newPages}\n          onChange={onChangePagesHandler}\n        />\n      </div>\n      <div>\n        Month:\n        <input\n          value={newMonth}\n          onChange={onChangeMonthHandler}\n        />\n      </div>\n      <div>\n        Annote:\n        <input\n          value={newAnnote}\n          onChange={onChangeAnnoteHandler}\n        />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default DataForm;\n","import React from 'react';\n\nconst Datas = ({ datas, onDelete }) => {\n  function confirmDelete(id, title) {\n    if(window.confirm(`Delete ${title}?`)) {\n      onDelete(id);\n    }\n    return;\n  }\n\n  return(\n    <>\n      {datas.map(dbs => (\n        <p key={dbs.id}>\n          {dbs.author} {dbs.title}{dbs.journal}{dbs.year}{dbs.eprint}{dbs.eprinttype}{dbs.eprintclass}{dbs.pages}{dbs.month}{dbs.annote}\n          <button onClick={() => confirmDelete(dbs.id, dbs.title)}>delete</button>\n        </p>\n      ))}\n    </>\n  );\n}\nexport default Datas;","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n  if (type === 'error') {\n    return (\n      <div className=\"notification error\">\n      {message}\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\n\nimport dataService from './services/data';\nimport Filter from './components/Filter';\nimport DataForm from './components/DataForm';\nimport Datas from './components/Datas';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [datas, setDatas] = useState([]);\n  const [newData, setNewData] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [newJournal, setNewJournal] = useState('');\n  const [newYear, setNewYear] = useState('');\n  const [newEprint, setNewEprint] = useState('');\n  const [newEprinttype, setNewEprinttype] = useState('');\n  const [newEprintClass, setNewEprintClass] = useState('');\n  const [newPages, setNewPages] = useState('');\n  const [newMonth, setNewMonth] = useState('');\n  const [newAnnote, setNewAnnote] = useState('');\n  const [searchTitle, setSearchTitle] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    dataService\n      .getAll()\n      .then(initialDatas => {\n        setDatas(initialDatas);\n      });\n  }, []);\n\n  const contactsToShow = showAll\n    ? datas\n    : datas.filter(data => {\n        let toFilter = data.title.toLocaleLowerCase();\n        let toSearch = searchTitle.toLowerCase()\n        return toFilter.includes(toSearch);\n      });\n\n  const _isAdded = (title, data) => {\n    let isAdded = data.find(el => el.title === title);\n    if (isAdded === undefined) {\n      return false;\n    }\n    return true;\n  } \n\n  const addData = event => {\n    event.preventDefault();\n    // Check if the contact already exists\n    const toUpdate = datas.filter(d => {\n      return d.name.includes(newTitle);\n    });\n    if (toUpdate.length === 1) {\n      const confirm = window.confirm(`${newTitle} is already added to database, replace the old data with a new one?`);\n      if (confirm) {\n        dataService\n          .update(toUpdate[0].id, {\n            ...toUpdate[0],\n            title: newTitle\n          })\n          .then(updatedData => {\n            let updatedState = datas.filter(p => p.id !== updatedData.id);\n            updatedState = [...updatedState, updatedData];\n            setDatas(updatedState);\n            setNewTitle('');\n            setNewAuthor('');\n            setNewJournal('')\n            setNewYear('')\n            setNewEprint('')\n            setNewEprinttype('')\n            setNewEprintClass('')\n            setNewPages('')\n            setNewMonth('')\n            setNewAnnote('')\n            setNotificationMessage(`Added ${updatedData.title}`);\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 2000);\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${newTitle} has already been removed from server`);\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000);\n          })\n      }\n    } else {\n      // if not, save the person\n      const dataObject = {\n        author: newAuthor,\n        title: newTitle,\n        journal: newJournal,\n        year: newYear,\n        eprint: newEprint,\n        eprinttype: newEprinttype,\n        eprintclass: newEprintClass,\n        pages: newPages,\n        month: newMonth,\n        annote: newAnnote,\n      }\n\n      dataService\n        .create(dataObject)\n        .then(returnedNote => {\n          if (_isAdded(newData, datas)) {\n            alert(`${newData} is already added to database`);\n          }\n          else {\n            setDatas([...datas, { author: newAuthor, title: newTitle,journal:newJournal,year:newYear,eprint:newEprint,eprinttype:newEprinttype,eprintclass:newEprintClass,pages:newPages,month:newMonth,annote:newAnnote }]);\n          }\n          setNotificationMessage(`Added ${newTitle}`);\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 2000);\n          setNewTitle('');\n          setNewAuthor('');\n          setNewJournal('')\n          setNewYear('')\n          setNewEprint('')\n          setNewEprinttype('')\n          setNewEprintClass('')\n          setNewPages('')\n          setNewMonth('')\n          setNewAnnote('')\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${newTitle} has already been removed from server`);\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n        })\n    }\n  }\n\n  const deleteData = id => {\n    dataService\n      .remove(id)\n      .then(() => {\n        const updatedDatas = datas.filter(d => d.id !== id);\n        setDatas(updatedDatas);\n      })\n  }\n  \n  const handleTitleChange = event => {\n    setNewTitle(event.target.value);\n  }\n\n  const handleAuthorChange = event => {\n    setNewAuthor(event.target.value);\n  }\n\n  const handleJournalChange = event => {\n    setNewJournal(event.target.value);\n  }\n\n  const handleYearChange = event => {\n    setNewYear(event.target.value);\n  }\n\n  const handleEprintChange = event => {\n    setNewEprint(event.target.value);\n  }\n\n  const handleEprinttypeChange = event => {\n    setNewEprinttype(event.target.value);\n  }\n\n  const handleEprintClassChange = event => {\n    setNewEprintClass(event.target.value);\n  }\n\n  const handlePagesChange = event => {\n    setNewPages(event.target.value);\n  }\n\n  const handleMonthChange = event => {\n    setNewMonth(event.target.value);\n  }\n\n  const handleannoteChange = event => {\n    setNewAnnote(event.target.value);\n  }\n\n  const handleSearchTitle = event => {\n    setSearchTitle(event.target.value);\n    setShowAll(false);\n  }\n\n\n  return (\n    <div>\n      <h2>Data</h2>\n      <Notification message={notificationMessage} />\n      <Notification type={\"error\"} message={errorMessage} />\n      <Filter onChangeHandler={handleSearchTitle} />\n      <h2>Add a new</h2>\n      <DataForm\n        onSubmitHandler={addData}\n        newTitle={newTitle}\n        onChangeTitleHandler={handleTitleChange}\n        newAuthor={newAuthor}\n        onChangeAuthorHandler={handleAuthorChange}\n        newJournal={newJournal}\n        onChangeJournalHandler={handleJournalChange}\n        newYear={newYear}\n        onChangeYearHandler={handleYearChange}\n        newEprint={newEprint}\n        onChangeEprintHandler={handleEprintChange}\n        newEprinttype={newEprinttype}\n        onChangeEprinttypeHandler={handleEprinttypeChange}\n        newEprintClass={newEprintClass}\n        onChangeEprintclassHandler={handleEprintClassChange}\n        newPages={newPages}\n        onChangePagesHandler={handlePagesChange}\n        newMonth={newMonth}\n        onChangeMonthHandler={handleMonthChange}\n        newAnnote={newAnnote}\n        onChangeAnnoteHandler={handleannoteChange}\n      />\n      <h2>datas</h2>\n      <Datas\n        datas={contactsToShow}\n        onDelete={deleteData}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}